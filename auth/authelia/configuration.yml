identity_validation:
  reset_password:
    jwt_lifespan: '5 minutes'
    jwt_algorithm: 'HS512'


notifier:
  disable_startup_check: false
  filesystem:
    filename: '/config/notification.txt'


# This is just the LDAP part of the Authelia configuration!
authentication_backend:
  # authelia user needs to be in lldap_password_manager if able to reset passwords
  password_reset:
    disable: true
  # How often authelia should check if there is an user update in LDAP
  refresh_interval: 1m
  ldap:
    implementation: custom
    # Pattern is ldap://HOSTNAME-OR-IP:PORT
    # Normal ldap port is 389, standard in LLDAP is 3890
    address: ldap://lldap:3890
    # The dial timeout for LDAP.
    timeout: 5s
    # Use StartTLS with the LDAP connection, TLS not supported right now
    start_tls: false
    #tls:
    #  skip_verify: false
    #  minimum_version: TLS1.2
    # You need to set this to ou=people, because all users are stored in this ou!
    additional_users_dn: ou=people
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    # Set this to ou=groups, because all groups are stored in this ou
    additional_groups_dn: ou=groups
    # The groups are not displayed in the UI, but this filter works.
    groups_filter: "(member={dn})"
    # The attribute holding the name of the group.
    attributes:
      display_name: displayName
      username: uid
      group_name: cn
      mail: mail
      # distinguished_name: distinguishedName
      # member_of: memberOf

    # The username and password of the bind user.
    # "uid=" should be the username you created for authentication with the "lldap_strict_readonly" permission. It is not recommended to use an actual admin account here.
    # If you are configuring Authelia to change user passwords, then the account used here needs the "lldap_password_manager" permission instead.
    user: uid=authelia,ou=people,dc=1a,dc=nu
    # Password can also be set using a secret: https://www.authelia.com/docs/configuration/secrets.html
    #password: 'REPLACE_ME'
    # set as environment in docker-compose.yml



##
## WebAuthn Configuration
##
## Parameters used for WebAuthn.
# webauthn:
  ## Disable WebAuthn.
  # disable: false

  ## The interaction timeout for WebAuthn dialogues in the duration common syntax.
  # timeout: '60 seconds'

  ## The display name the browser should show the user for when using WebAuthn to login/register.
  # display_name: 'Authelia'

  ## Conveyance preference controls if we collect the attestation statement including the AAGUID from the device.
  ## Options are none, indirect, direct.
  # attestation_conveyance_preference: 'indirect'

  ## User verification controls if the user must make a gesture or action to confirm they are present.
  ## Options are required, preferred, discouraged.
  # user_verification: 'preferred'
  

##
## Password Policy Configuration.
##
# password_policy:

  ## The standard policy allows you to tune individual settings manually.
  # standard:
    # enabled: false

    ## Require a minimum length for passwords.
    # min_length: 8

    ## Require a maximum length for passwords.
    # max_length: 0

    ## Require uppercase characters.
    # require_uppercase: true

    ## Require lowercase characters.
    # require_lowercase: true

    ## Require numeric characters.
    # require_number: true

    ## Require special characters.
    # require_special: true

  ## zxcvbn is a well known and used password strength algorithm. It does not have tunable settings.
  # zxcvbn:
    # enabled: false

    ## Configures the minimum score allowed.
    # min_score: 3


# This mechanism prevents attackers from brute forcing the first factor. It bans the user if too many attempts are made
# in a short period of time.
regulation:
  # The number of failed login attempts before user is banned. Set it to 0 to disable regulation.
  max_retries: 3

  # The time range during which the user can attempt login before being banned in the duration common syntax. The user
  # is banned if the authentication failed 'max_retries' times in a 'find_time' seconds window.
  find_time: '13 minutes'

  # The length of time before a banned user can login again in the duration common syntax.
  ban_time: '73 minutes'


#
# Storage Provider Configuration
#
# The available providers are: `local`, `mysql`, `postgres`. You must use one and only one of these providers.
storage:
  local:
    path: '/config/db.sqlite3'

